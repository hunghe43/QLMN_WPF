<Controls:MetroWindow x:Class="QLMNTC.View.HocSinhWindow"
                      Name="WindowHocSinh"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:viewmodel="clr-namespace:QLMNTC.ViewModel"          
                       Closing="DataWindow_Closing"  
        xmlns:local="clr-namespace:QLMNTC.View"
        mc:Ignorable="d"
               Title="Quản lý trường mầm non 28/10"
                     BorderThickness="1" 
                      GlowBrush="Black"
                      ResizeMode="NoResize"
                      WindowTransitionsEnabled="False" Width="1024" Height="497.5">
    <Window.DataContext>
        <viewmodel:HocSinhViewModel></viewmodel:HocSinhViewModel>
    </Window.DataContext>
    <Window.Resources>
        <Storyboard x:Key="sbShowLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-150,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="sbHideLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="-150,0,0,0" AccelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>


        <Storyboard x:Key="sbShowTopMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,-100,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="sbHideTopMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,-100,0,0" AccelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>


        <Storyboard x:Key="sbShowRightMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,-150,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="sbHideRightMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,0,-150,0" AccelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>


        <Storyboard x:Key="sbShowBottomMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,-100" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="sbHideBottomMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="0,0,0,-100" AccelerationRatio=".9" Duration="0:0:1" />
        </Storyboard>
        <!--test-->


        <SolidColorBrush x:Key="DynamicBG" />
        <Style x:Key="myStyle" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="ToolTip" Value="Kapan"/>
                    <Setter Property="Tag" Value="Kapan"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGreen"/>
                    <Setter Property="Tag" Value="Açıl"/>
                    <Setter Property="ToolTip" Value="Açıl"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="myButton" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="5,1,1,1"
                            BorderBrush="White" 
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                                <Setter TargetName="border" Property="Background" Value="#FF42B60C" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,1,1,1" />
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Content" Value="Açıl"/>
                                <Setter Property="Tag" Value="Açıl"/>
                                <Setter Property="ToolTip" Value="Açıl"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF32760B" />
                                <Setter TargetName="border" Property="Background" Value="#FFFDFDFD" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,1,1,1" />
                                <Setter Property="Foreground" Value="#FF32760B"/>
                                <Setter Property="Content" Value="Kapan"/>
                                <Setter Property="ToolTip" Value="Kapan"/>
                                <Setter Property="Tag" Value="Kapan"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>

            </Setter>


        </Style>

        <!--Kayarak Açılma-->
        <Style x:Key="spSlideLeft" TargetType="StackPanel">
            <Setter Property="Height" Value="360"></Setter>
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                </Trigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-150,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:0.8"/>
                            </Storyboard>
                        </BeginStoryboard>

                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="-150,0,0,0" DecelerationRatio=".9" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>

        </Style>


        <Style x:Key="MenuLabel" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Foreground" Value="#FFACB5B9"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontWeight" Value="Bold"/>

                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Foreground" Value="#FFACB5B9"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="MenuBlock" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Foreground" Value="#FFACB5B9"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontWeight" Value="Bold"/>

                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Foreground" Value="#FFACB5B9"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="MenuDecLabel" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,0,0,0"/>
            <Setter Property="Foreground" Value="#FFACB5B9"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="Auto"/>

        </Style>
    </Window.Resources>
   
    <StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="300"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid  Grid.Row="0">
                
                <TextBlock Text="QUẢN LÝ HỌC SINH" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="48" Opacity="0.6" FontFamily="Segoe UI Black" Background="#7FFFFFFF" />
            </Grid>
            <DataGrid Name="dtg_listHocSinh" ItemsSource="{Binding ListHocSinh,Mode=TwoWay}" BorderThickness="1"
                      CanUserAddRows="false"
                          HorizontalScrollBarVisibility="Auto" 
                          VerticalScrollBarVisibility="Auto" 
                          HorizontalAlignment="Center"
                          Grid.Row="1" Margin="0,10,0,0" AutoGenerateColumns="False" >
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header="Chọn"
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        />
                    <DataGridTextColumn Binding="{Binding Ten}" Header="Tên học sinh" IsReadOnly="True"/>
                    <DataGridTextColumn  Binding="{Binding NgaySinh}" Header="Ngày sinh" IsReadOnly="True"/>
                    <DataGridTextColumn  Binding="{Binding GioiTinh}" Header="Giới tính" IsReadOnly="True"/>
                    <DataGridTextColumn  Binding="{Binding ChieuCao}" Header="Chiều cao" IsReadOnly="True"/>
                    <DataGridTextColumn  Binding="{Binding CanNang}" Header="Cân nặng" IsReadOnly="True"/>
                    <DataGridTextColumn  Binding="{Binding MaLop}" Header="Mã lớp" IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="Học Phí">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <Button Content="Học Phí" Margin="10,0,0,0"
                                            Command="{Binding DataContext.HocPhiView,ElementName=dtg_listHocSinh,Mode=TwoWay}" 
                                            CommandParameter="{Binding}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
            <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center"  Grid.Row="2" Margin="0,10,0,0">
                <!--<ToggleButton  Width="50"
                                  Height="50"
                                  Style="{DynamicResource MetroCircleToggleButtonStyle}">
                        <Rectangle Width="20"
                                   Height="20"
                                   Fill="{DynamicResource BlackBrush}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill"
                                             Visual="{DynamicResource appbar_city}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </ToggleButton>-->
                <Button Content="Thêm mới" Width="100" Command="{Binding ShowDialog,Mode=TwoWay}"></Button>
                <Button Content="Sửa" Width="100" Margin="10,0,0,0" 
                        Command="{Binding ShowDialog,Mode=TwoWay}"
                        CommandParameter="{Binding SelectedValue,ElementName=dtg_listHocSinh}"></Button>
                <Button Content="Xóa" Width="100" Margin="10,0,0,0"   
                        Command="{Binding DeleteHocSinh,Mode=TwoWay}"
                        CommandParameter="{Binding SelectedItem,ElementName=dtg_listHocSinh}"></Button>
            </StackPanel>

        </Grid>
        <Border VerticalAlignment="Bottom" Margin="0,31,0,0" BorderBrush="#FF8F7C7C" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Height="35">
            <TextBlock Text="--Design by hungnv-Ruby@--" Foreground="#FF4F4F4F" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
        </Border>
    </StackPanel>
</Controls:MetroWindow>
